
#!/usr/bin/env python
# -*- coding: utf-8 -*-
##############################################################################
#  Jewelry MES ‚Äî –æ–±–æ–ª–æ—á–∫–∞ + —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞                     ‚Ä¢ PyQt5 ‚Ä¢
##############################################################################

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
base_dir = Path(__file__).parent.resolve()
sys.path.append(str(base_dir))
sys.path.append(str(base_dir / "pages"))
sys.path.append(str(base_dir / "core"))
sys.path.append(str(base_dir / "logic"))

from core.com_bridge import COM1CBridge
bridge = COM1CBridge("C:\\Users\\Mor\\Desktop\\1C\\proiz")
from PyQt5.QtCore    import Qt
from PyQt5.QtGui     import QFont, QCursor
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QLabel, QListWidget, QStackedWidget,
    QVBoxLayout, QHBoxLayout, QToolButton
)

# –°—Ç—Ä–∞–Ω–∏—Ü—ã
from pages.orders_page import OrdersPage
from pages.wax_page import WaxPage
from pages.catalogs_page import CatalogsPage


APP = "Jewelry MES (shell-only)"
VER = "v0.3b"

MENU_ITEMS = [
    ("üìÑ  –ó–∞–∫–∞–∑—ã",            "orders"),       # ‚Üí pages/orders_page.py     + logic/production_docs.py
    ("üñ®Ô∏è  –í–æ—Å–∫–æ–≤–∞–Ω–∏–µ / 3D –ø–µ—á–∞—Ç—å", "wax"),      # ‚Üí pages/wax_page.py        + logic/production_docs.py
    ("üî•  –û—Ç–ª–∏–≤–∫–∞",           "casting"),      # ‚Üí pages/casting_page.py    [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üì•  –ü—Ä–∏—ë–º –ª–∏—Ç—å—è",       "casting_in"),   # ‚Üí pages/casting_in_page.py [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üì¶  –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è",      "kit"),          # ‚Üí pages/kit_page.py        [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üõ†Ô∏è  –ú–æ–Ω—Ç–∏—Ä–æ–≤–∫–∞",        "assembly"),     # ‚Üí pages/assembly_page.py   [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("ü™ö  –®–∫—É—Ä–∫–∞",            "sanding"),      # ‚Üí pages/sanding_page.py    [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üîÑ  –ì–∞–ª—Ç–æ–≤–∫–∞",          "tumbling"),     # ‚Üí pages/tumbling_page.py   + logic/loss_calc.py
    ("üíé  –ó–∞–∫—Ä–µ–ø–∫–∞",          "stone_set"),    # ‚Üí pages/stone_set_page.py  + logic/normalize_catalogs.py
    ("üìè  –ü–∞–ª–∞—Ç–∞",            "inspection"),   # ‚Üí pages/inspection_page.py + logic/validation.py (–≤–æ–∑–º–æ–∂–Ω.)
    ("‚ú®  –ü–æ–ª–∏—Ä–æ–≤–∫–∞",         "polish"),       # ‚Üí pages/polish_page.py     [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("‚ö°  –ì–∞–ª—å–≤–∞–Ω–∏–∫–∞",        "plating"),      # ‚Üí pages/plating_page.py    [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üìë  –í—ã–ø—É—Å–∫",            "release"),      # ‚Üí pages/release_page.py    + logic/production_docs.py
    ("üì§  –û—Ç–≥—Ä—É–∑–∫–∞",          "shipment"),     # ‚Üí pages/shipment_page.py   [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üìä  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",        "stats"),        # ‚Üí pages/stats_page.py      + widgets/charts.py + logic/loss_calc.py
    ("üè¨  –°–∫–ª–∞–¥—ã",            "stock"),        # ‚Üí pages/stock_page.py      + core/com_bridge.py
    ("üó∫Ô∏è  –ú–∞—Ä—à—Ä—É—Ç—ã",          "routes"),       # ‚Üí pages/routes_page.py     [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üóìÔ∏è  –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",      "planning"),     # ‚Üí pages/planning_page.py   [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üí∞  –ó–∞—Ä–ø–ª–∞—Ç–∞",          "payroll"),      # ‚Üí pages/payroll_page.py    [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üè∑Ô∏è  –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞",        "marking"),      # ‚Üí pages/marking_page.py    [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üåê  –ì–ò–ò–° –î–ú–î–ö",         "giis"),         # ‚Üí pages/giis_page.py       [–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ]
    ("üìö  –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏",       "catalogs")      # ‚Üí pages/catalogs_page.py   + logic/normalize_catalogs.py + core/catalogs.py
]

HEADER_H       = 38
SIDEBAR_WIDTH  = 260

HEADER_CSS = """
QWidget{background:#111827;}
QLabel#brand{color:#e5e7eb;font-size:15px;font-weight:600;}
QToolButton{background:#111827;color:#9ca3af;border:none;font-size:16px;}
QToolButton:hover{color:white;}
"""

SIDEBAR_CSS = """
QListWidget{background:#1f2937;border:none;color:#e5e7eb;
            padding-top:6px;font-size:15px;}
QListWidget::item{height:46px;margin:4px 8px;padding-left:14px;
                  border-radius:12px;}
QListWidget::item:selected{background:#3b82f6;color:white;}
QListWidget QScrollBar:vertical{width:0px;background:transparent;}
QListWidget:hover QScrollBar:vertical{width:8px;}
"""

# –ó–∞–≥–ª—É—à–∫–∞
class StubPage(QWidget):
    def __init__(self, title: str):
        super().__init__()
        v = QVBoxLayout(self)
        v.setContentsMargins(40, 30, 40, 30)
        lbl = QLabel(title)
        lbl.setFont(QFont("Arial", 22, QFont.Bold))
        v.addWidget(lbl, alignment=Qt.AlignTop)

# –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
class Main(QMainWindow):
    def __init__(self):
        super().__init__()
        self.setWindowTitle(f"{APP} ‚Äî {VER}")
        self.resize(1400, 800)

        central = QWidget(); self.setCentralWidget(central)
        outer = QVBoxLayout(central); outer.setContentsMargins(0, 0, 0, 0)

        header = QWidget(); header.setFixedHeight(HEADER_H)
        header.setStyleSheet(HEADER_CSS)
        h_lay = QHBoxLayout(header); h_lay.setContentsMargins(6, 0, 10, 0)

        self.btn_toggle = QToolButton()
        self.btn_toggle.setText("‚óÄ")
        self.btn_toggle.setCursor(QCursor(Qt.PointingHandCursor))
        self.btn_toggle.setToolTip("–°–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é")
        self.btn_toggle.clicked.connect(self.toggle_sidebar)

        brand = QLabel("–†–æ—Å—Ç –ó–æ–ª–æ—Ç–æ"); brand.setObjectName("brand")

        h_lay.addWidget(self.btn_toggle, alignment=Qt.AlignLeft)
        h_lay.addWidget(brand, alignment=Qt.AlignLeft)
        h_lay.addStretch(1)
        outer.addWidget(header)

        body = QWidget()
        body_lay = QHBoxLayout(body); body_lay.setContentsMargins(0, 0, 0, 0)

        self.menu = QListWidget(); self.menu.setStyleSheet(SIDEBAR_CSS)
        self.menu.setFixedWidth(SIDEBAR_WIDTH)

        self.pages = QStackedWidget()
        body_lay.addWidget(self.menu)
        body_lay.addWidget(self.pages, 1)
        outer.addWidget(body, 1)

        self.page_idx = {}
        self.page_refs = {}
        wax_index = next(i for i, (_, k) in enumerate(MENU_ITEMS) if k == "wax")
        for idx, (title, key) in enumerate(MENU_ITEMS):
            self.menu.addItem(title)
            if key == "orders":
                page = OrdersPage(on_send_to_wax=lambda: (self.page_refs["wax"].refresh(), self.menu.setCurrentRow(self.page_idx.get("wax", wax_index))))
            elif key == "wax":
                page = WaxPage()
            elif key == "catalogs":
                page = CatalogsPage(bridge)  # ‚Üê –≤–æ—Ç —ç—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ!
            else:
                page = StubPage(title.strip())
            self.pages.addWidget(page)
            self.page_idx[key] = idx
            self.page_refs[key] = page

        self.menu.currentRowChanged.connect(self.pages.setCurrentIndex)
        self.menu.setCurrentRow(0)
        self.sidebar_open = True

    def toggle_sidebar(self):
        self.sidebar_open = not self.sidebar_open
        self.menu.setVisible(self.sidebar_open)
        self.btn_toggle.setText("‚óÄ" if self.sidebar_open else "‚ñ∂")
        self.btn_toggle.setToolTip("–°–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é" if self.sidebar_open else "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –º–µ–Ω—é")


# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    QApplication.setAttribute(Qt.AA_EnableHighDpiScaling, True)
    app = QApplication(sys.argv); app.setStyle("Fusion")
    win = Main(); win.show(); sys.exit(app.exec_())
    
    from core.com_bridge import COM1CBridge

if __name__ == "__main__":
    bridge = COM1CBridge("C:\\path\\to\\your\\base")  # –∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –±–∞–∑–µ
    tasks = bridge.list_production_orders()
    print("–ó–∞–¥–∞–Ω–∏—è:", tasks)

    wax_jobs = bridge.list_wax_work_orders()
    print("–ù–∞—Ä—è–¥—ã:", wax_jobs)