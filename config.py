import os
from pathlib import Path
from core.logger import logger  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
from core.com_bridge import COM1CBridge
from core import config_parser

# Base directory of the project
BASE_DIR = Path(__file__).resolve().parent

# Path to 1C database
ONEC_PATH = os.getenv("ONEC_PATH", "C:/Users/Mor/Desktop/1C/proiz")

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä COM‚Äë–º–æ—Å—Ç–∞
BRIDGE = None


def init_bridge(user: str, password: str, base_path: str | None = None):
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ 1–° —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ —É—á—ë—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏."""
    global BRIDGE
    if base_path is None:
        base_path = ONEC_PATH
    BRIDGE = COM1CBridge(base_path, usr=user, pwd=password)
    return BRIDGE

# Application
APP_NAME = "Jewelry MES (shell-only)"
APP_VERSION = "v0.3b"

# Menu structure used in main window
MENU_ITEMS = [
    ("üìÑ  –ó–∞–∫–∞–∑—ã", "orders"),
    ("üñ®Ô∏è  –í–æ—Å–∫–æ–≤–∞–Ω–∏–µ / 3D –ø–µ—á–∞—Ç—å", "wax"),
    ("üî•  –û—Ç–ª–∏–≤–∫–∞", "casting"),
    ("üì•  –ü—Ä–∏—ë–º –ª–∏—Ç—å—è", "casting_in"),
    ("üì¶  –ö–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏—è", "kit"),
    ("üõ†Ô∏è  –ú–æ–Ω—Ç–∏—Ä–æ–≤–∫–∞", "assembly"),
    ("ü™ö  –®–∫—É—Ä–∫–∞", "sanding"),
    ("üîÑ  –ì–∞–ª—Ç–æ–≤–∫–∞", "tumbling"),
    ("üíé  –ó–∞–∫—Ä–µ–ø–∫–∞", "stone_set"),
    ("üìè  –ü–∞–ª–∞—Ç–∞", "inspection"),
    ("‚ú®  –ü–æ–ª–∏—Ä–æ–≤–∫–∞", "polish"),
    ("‚ö°  –ì–∞–ª—å–≤–∞–Ω–∏–∫–∞", "plating"),
    ("üìë  –í—ã–ø—É—Å–∫", "release"),
    ("üì§  –û—Ç–≥—Ä—É–∑–∫–∞", "shipment"),
    ("üìä  –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "stats"),
    ("üè¨  –°–∫–ª–∞–¥—ã", "stock"),
    ("üó∫Ô∏è  –ú–∞—Ä—à—Ä—É—Ç—ã", "routes"),
    ("üóìÔ∏è  –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "planning"),
    ("üí∞  –ó–∞—Ä–ø–ª–∞—Ç–∞", "payroll"),
    ("üè∑Ô∏è  –ú–∞—Ä–∫–∏—Ä–æ–≤–∫–∞", "marking"),
    ("üåê  –ì–ò–ò–° –î–ú–î–ö", "giis"),
    ("üìö  –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏", "catalogs"),
]

# UI constants
HEADER_HEIGHT = 38
SIDEBAR_WIDTH = 260

HEADER_CSS = """
QWidget{background:#111827;}
QLabel#brand{color:#e5e7eb;font-size:15px;font-weight:600;}
QToolButton{background:#111827;color:#9ca3af;border:none;font-size:16px;}
QToolButton:hover{color:white;}
"""

SIDEBAR_CSS = """
QListWidget{background:#1f2937;border:none;color:#e5e7eb;
            padding-top:6px;font-size:15px;}
QListWidget::item{height:46px;margin:4px 8px;padding-left:14px;
                  border-radius:12px;}
QListWidget::item:selected{background:#3b82f6;color:white;}
QListWidget QScrollBar:vertical{width:0px;background:transparent;}
QListWidget:hover QScrollBar:vertical{width:8px;}
"""

# Style for login dialog
LOGIN_DIALOG_CSS = """
QDialog{background:#1f2937;}
QLabel#title{color:#e5e7eb;font-size:18px;font-weight:600;}
QLabel{color:#e5e7eb;font-size:14px;}
QLineEdit,QComboBox{background:#374151;color:#e5e7eb;border:1px solid #4b5563;
                    border-radius:6px;padding:4px;}
QPushButton{background:#3b82f6;color:#ffffff;border:none;padding:6px 12px;
            border-radius:4px;}
QPushButton:hover{background:#2563eb;}
"""

# –°–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é
def load_employee_logins() -> list[str]:

    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ª–æ–≥–∏–Ω–æ–≤ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —á–µ—Ä–µ–∑ COM —Å —Ä–µ–∑–µ—Ä–≤–Ω—ã–º —á—Ç–µ–Ω–∏–µ–º."""
    fallback = ["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]

    try:
        bridge = BRIDGE or COM1CBridge(ONEC_PATH, usr="–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", pwd="")
        items = bridge.list_catalog_items("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", 1000)
        logins = [it.get("Description", "") for it in items if it.get("Description")]
        if logins:
            return logins
    except Exception as exc:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏–Ω—ã —á–µ—Ä–µ–∑ COM: %s", exc)

    try:
        users = config_parser.get_catalog_items("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        return users or fallback
    except Exception as exc:
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–∏–Ω—ã –∏–∑ XML: %s", exc)
        return fallback


    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ª–æ–≥–∏–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏–∑ –¥–∞–º–ø–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏."""
    try:
        users = config_parser.get_catalog_items("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏")
        return users or ["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]
    except Exception as exc:  # –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–±–ª–µ–º –ø–∞—Ä—Å–∏–Ω–≥–∞
        logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ–≥–∏–Ω—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: %s", exc)
        return ["–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"]


EMPLOYEE_LOGINS = load_employee_logins()


# Style for tree widgets used on the wax page
CSS_TREE = """
QTreeWidget{
  background:#ffffff;
  border:1px solid #d1d5db;
  color:#111827;
  font-size:14px;
}
QTreeWidget::item{
  padding:4px 8px;
  border-bottom:1px solid #e5e7eb;
}

/* –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ */
QTreeView::item:selected{
  background:#3b82f6;
  color:#ffffff;
}

/* hover */
QTreeView::item:hover:!selected{
  background:rgba(59,130,246,0.30);
}

/*  ‚Äî –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–µ–±—Ä—É, —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ ‚Üì ‚Äî
QTreeView::item:nth-child(even):!selected{ background:#f9fafb; }
QTreeView::item:nth-child(odd):!selected { background:#ffffff; }
*/
"""

# Columns for the orders table
ORDERS_COLS = ["–ê—Ä—Ç–∏–∫—É–ª", "–ù–∞–∏–º.", "–í–∞—Ä–∏–∞–Ω—Ç", "–†–∞–∑–º–µ—Ä", "–ö–æ–ª-–≤–æ", "–í–µ—Å, –≥", "–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ"]

# –ß–∏—Å–ª–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –≤–µ—Å–∞
WEIGHT_DECIMALS = 3
